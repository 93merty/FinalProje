# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true("düşük maaşla çalışacak çalışanlara ihtiyacı vardır" %in% problem_metni)
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true("geçmişi ve geleceği belirsizdir" %in% problem_metni)
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true("girişimci ruhu bulunan çalışanlar olmalıdır" %in% problem_metni)
})
Şirketimiz **CargoBox**. Problemimiz *Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır.Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır.*.
Şirketimiz **CargoBox**. Problemimiz *Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır.Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır.*.
Şirketimiz **CargoBox**. Problemimiz *Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır.Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır.*.
problem_metni <- Şirketimiz CargoBox. Problemimiz Şirketimiz bir startup'dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır. Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır.
Şirketimiz **CargoBox**. Problemimiz *Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır.Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır.*.
# Q2 : Proje Amacı
[Entrepreneurial Competency in University Students](https://www.kaggle.com/datasets/namanmanchanda/entrepreneurial-competency-in-university-students) adlı girişimci üniversite öğrencilerine ilişkin Kaggle veri seti ile İkinci bir veri seti olarak şirketimin departman adlarını ve departmanlarının üniversitelerin hangi bölümlerinden çalışanlar aradıkları gibi değişkenler içeren basit bir (https://drive.google.com/file/d/11d_qbho-N2cZz1ORmWvCrIRo2aQVVvtn/view?usp=sharing) veri setini *girişimci olan adayları filtreleyerek* ve *girişimci olan adayları bölümlerine göre kümeleyerek* ardından *adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması sonucu adayların sıralanması* ve ikinci veri setinde **alım şartlarını sağlayan adayların belirlenmesi** yöntemlerini kullanarak problemi yok edeceğiz. Bu sayede de iş için uygun adayları belirlemeyi planlıyoruz.
library(testthat)
# Testler
test_that("Problem metni testi", {
# Metin içinde "CargoBox" geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true("startup" %in% problem_metni)
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true("çalışana ayıracak bütçesi kısıtlıdır" %in% problem_metni)
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true("düşük maaşla çalışacak çalışanlara ihtiyacı vardır" %in% problem_metni)
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true("geçmişi ve geleceği belirsizdir" %in% problem_metni)
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true("girişimci ruhu bulunan çalışanlar olmalıdır" %in% problem_metni)
})
---
title: "Proje Rapor : Mert YILMAZ 200401098"
# Q1 : Problem tanımı
Şirketimiz **CargoBox**. Problemimiz *Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır.Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır.*.
problem_metni <- 'Şirketimiz CargoBox. Problemimiz Şirketimiz bir startup'dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır. Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır.'
# Q2 : Proje Amacı
[Entrepreneurial Competency in University Students](https://www.kaggle.com/datasets/namanmanchanda/entrepreneurial-competency-in-university-students) adlı girişimci üniversite öğrencilerine ilişkin Kaggle veri seti ile İkinci bir veri seti olarak şirketimin departman adlarını ve departmanlarının üniversitelerin hangi bölümlerinden çalışanlar aradıkları gibi değişkenler içeren basit bir (https://drive.google.com/file/d/11d_qbho-N2cZz1ORmWvCrIRo2aQVVvtn/view?usp=sharing) veri setini *girişimci olan adayları filtreleyerek* ve *girişimci olan adayları bölümlerine göre kümeleyerek* ardından *adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması sonucu adayların sıralanması* ve ikinci veri setinde **alım şartlarını sağlayan adayların belirlenmesi** yöntemlerini kullanarak problemi yok edeceğiz. Bu sayede de iş için uygun adayları belirlemeyi planlıyoruz.
library(testthat)
# Testler
test_that("Problem metni testi", {
# Metin içinde "CargoBox" geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true("startup" %in% problem_metni)
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true("çalışana ayıracak bütçesi kısıtlıdır" %in% problem_metni)
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true("düşük maaşla çalışacak çalışanlara ihtiyacı vardır" %in% problem_metni)
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true("geçmişi ve geleceği belirsizdir" %in% problem_metni)
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true("girişimci ruhu bulunan çalışanlar olmalıdır" %in% problem_metni)
})
library(testthat)
# Veriyi tanımla
problem_metni <- "Şirketimiz CargoBox. Problemimiz Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır. Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır."
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox" geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true("startup" %in% problem_metni)
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true("çalışana ayıracak bütçesi kısıtlıdır" %in% problem_metni)
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true("düşük maaşla çalışacak çalışanlara ihtiyacı vardır" %in% problem_metni)
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true("geçmişi ve geleceği belirsizdir" %in% problem_metni)
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true("girişimci ruhu bulunan çalışanlar olmalıdır" %in% problem_metni)
})
# Veriyi tanımla
problem_metni <- "Şirketimiz CargoBox. Problemimiz Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır. Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır."
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox" geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true("startup" %in% problem_metni)
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true("çalışana ayıracak bütçesi kısıtlıdır" %in% problem_metni)
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true("düşük maaşla çalışacak çalışanlara ihtiyacı vardır" %in% problem_metni)
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true("geçmişi ve geleceği belirsizdir" %in% problem_metni)
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true("girişimci ruhu bulunan çalışanlar olmalıdır" %in% problem_metni)
})
Şirketimiz **CargoBox**. Problemimiz *Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır.Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır.*.
# problemi tanımla
problem_metni <- "Şirketimiz CargoBox. Problemimiz Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır. Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır."
library(testthat)
# Veriyi tanımla
problem_metni <- "Şirketimiz CargoBox. Problemimiz Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır. Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır."
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox" geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true("startup" %in% problem_metni)
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true("çalışana ayıracak bütçesi kısıtlıdır" %in% problem_metni)
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true("düşük maaşla çalışacak çalışanlara ihtiyacı vardır" %in% problem_metni)
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true("geçmişi ve geleceği belirsizdir" %in% problem_metni)
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true("girişimci ruhu bulunan çalışanlar olmalıdır" %in% problem_metni)
})
# Q1 : Problem tanımı
Şirketimiz **CargoBox**. Problemimiz *Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır.Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır.*.
# problemi tanımla
problem_metni <- "Şirketimiz CargoBox. Problemimiz Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır. Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır."
# Q2 : Proje Amacı
[Entrepreneurial Competency in University Students](https://www.kaggle.com/datasets/namanmanchanda/entrepreneurial-competency-in-university-students) adlı girişimci üniversite öğrencilerine ilişkin Kaggle veri seti ile İkinci bir veri seti olarak şirketimin departman adlarını ve departmanlarının üniversitelerin hangi bölümlerinden çalışanlar aradıkları gibi değişkenler içeren basit bir (https://drive.google.com/file/d/11d_qbho-N2cZz1ORmWvCrIRo2aQVVvtn/view?usp=sharing) veri setini *girişimci olan adayları filtreleyerek* ve *girişimci olan adayları bölümlerine göre kümeleyerek* ardından *adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması sonucu adayların sıralanması* ve ikinci veri setinde **alım şartlarını sağlayan adayların belirlenmesi** yöntemlerini kullanarak problemi yok edeceğiz. Bu sayede de iş için uygun adayları belirlemeyi planlıyoruz.
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox" geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true("startup" %in% problem_metni)
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true("çalışana ayıracak bütçesi kısıtlıdır" %in% problem_metni)
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true("düşük maaşla çalışacak çalışanlara ihtiyacı vardır" %in% problem_metni)
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true("geçmişi ve geleceği belirsizdir" %in% problem_metni)
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true("girişimci ruhu bulunan çalışanlar olmalıdır" %in% problem_metni)
})
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox" geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true("startup" %in% problem_metni)
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true("çalışana ayıracak bütçesi kısıtlıdır" %in% problem_metni)
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true("düşük maaşla çalışacak çalışanlara ihtiyacı vardır" %in% problem_metni)
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true("geçmişi ve geleceği belirsizdir" %in% problem_metni)
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true("girişimci ruhu bulunan çalışanlar olmalıdır" %in% problem_metni)
})
print(problem_metni)
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox" geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true("startup" %in% problem_metni)
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true("çalışana ayıracak bütçesi kısıtlıdır" %in% problem_metni)
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true("düşük maaşla çalışacak çalışanlara ihtiyacı vardır" %in% problem_metni)
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true("geçmişi ve geleceği belirsizdir" %in% problem_metni)
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true("girişimci ruhu bulunan çalışanlar olmalıdır" %in% problem_metni)
})
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde 'CargoBox' geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true("startup" %in% problem_metni)
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true("çalışana ayıracak bütçesi kısıtlıdır" %in% problem_metni)
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true("düşük maaşla çalışacak çalışanlara ihtiyacı vardır" %in% problem_metni)
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true("geçmişi ve geleceği belirsizdir" %in% problem_metni)
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true("girişimci ruhu bulunan çalışanlar olmalıdır" %in% problem_metni)
})
library(testthat)
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde 'CargoBox' geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true("startup" %in% problem_metni)
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true("çalışana ayıracak bütçesi kısıtlıdır" %in% problem_metni)
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true("düşük maaşla çalışacak çalışanlara ihtiyacı vardır" %in% problem_metni)
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true("geçmişi ve geleceği belirsizdir" %in% problem_metni)
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true("girişimci ruhu bulunan çalışanlar olmalıdır" %in% problem_metni)
})
Şirketimiz **CargoBox**. Problemimiz *Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır.Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır.*.
# problemi tanımla
problem_metni <- "Şirketimiz CargoBox. Problemimiz Şirketimiz bir startup’dur. Bu sebeple çalışana ayıracak bütçesi kısıtlıdır. Mümkün olduğunca düşük maaşla çalışacak çalışanlara ihtiyacı vardır. Yeni bir girişim olduğu için şirketin geçmişi ve geleceği belirsizdir. Bu sebeple bir girişimde yer almak isteyecek, girişimci ruhu bulunan çalışanlar olmalıdır."
# Q2 : Proje Amacı
[Entrepreneurial Competency in University Students](https://www.kaggle.com/datasets/namanmanchanda/entrepreneurial-competency-in-university-students) adlı girişimci üniversite öğrencilerine ilişkin Kaggle veri seti ile İkinci bir veri seti olarak şirketimin departman adlarını ve departmanlarının üniversitelerin hangi bölümlerinden çalışanlar aradıkları gibi değişkenler içeren basit bir (https://drive.google.com/file/d/11d_qbho-N2cZz1ORmWvCrIRo2aQVVvtn/view?usp=sharing) veri setini *girişimci olan adayları filtreleyerek* ve *girişimci olan adayları bölümlerine göre kümeleyerek* ardından *adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması sonucu adayların sıralanması* ve ikinci veri setinde **alım şartlarını sağlayan adayların belirlenmesi** yöntemlerini kullanarak problemi yok edeceğiz. Bu sayede de iş için uygun adayları belirlemeyi planlıyoruz.
# Q3 : Veri seti keşifsel analizi
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(testthat)
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde 'CargoBox' geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
})
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox." geçiyor mu?
expect_true("CargoBox" %in% problem_metni)
})
library(testthat)
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox" kelimesi geçiyor mu? (Büyük/küçük harf duyarlılığına dikkat ediyoruz)
expect_true("CargoBox" %in% strsplit(problem_metni, " ")[[1]])
})
library(testthat)
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox" kelimesi geçiyor mu? (Büyük/küçük harf duyarlılığına dikkat ediyoruz)
expect_true("cargobox" %in% tolower(strsplit(problem_metni, " ")[[1]]))
})
library(testthat)
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox" kelimesi geçiyor mu?
expect_true(grepl("CargoBox", problem_metni))
})
library(testthat)
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox" kelimesi geçiyor mu?
expect_true(grepl("CargoBox", problem_metni))
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true(grepl("startup", problem_metni))
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true(grepl("çalışana ayıracak bütçesi kısıtlıdır", problem_metni))
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true(grepl("düşük maaşla çalışacak çalışanlara ihtiyacı vardır", problem_metni))
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true(grepl("geçmişi ve geleceği belirsizdir", problem_metni))
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true(grepl("girişimci ruhu bulunan çalışanlar olmalıdır", problem_metni))
})
# Metin içinde "CargoBox" kelimesi geçiyor mu?
expect_true(grepl("CargoBox", problem_metni))
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true(grepl("startup", problem_metni))
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true(grepl("çalışana ayıracak bütçesi kısıtlıdır", problem_metni))
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true(grepl("düşük maaşla çalışacak çalışanlara ihtiyacı vardır", problem_metni))
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true(grepl("geçmişi ve geleceği belirsizdir", problem_metni))
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true(grepl("girişimci ruhu bulunan çalışanlar olmalıdır", problem_metni))
# Test senaryosu
test_that("Problem metni testi", {
# Metin içinde "CargoBox" kelimesi geçiyor mu?
expect_true(grepl("CargoBox", problem_metni))
# Metin içinde "startup" kelimesi geçiyor mu?
expect_true(grepl("startup", problem_metni))
# Metin içinde "çalışana ayıracak bütçesi kısıtlıdır" ifadesi geçiyor mu?
expect_true(grepl("çalışana ayıracak bütçesi kısıtlıdır", problem_metni))
# Metin içinde "düşük maaşla çalışacak çalışanlara ihtiyacı vardır" ifadesi geçiyor mu?
expect_true(grepl("düşük maaşla çalışacak çalışanlara ihtiyacı vardır", problem_metni))
# Metin içinde "geçmişi ve geleceği belirsizdir" ifadesi geçiyor mu?
expect_true(grepl("geçmişi ve geleceği belirsizdir", problem_metni))
# Metin içinde "girişimci ruhu bulunan çalışanlar olmalıdır" ifadesi geçiyor mu?
expect_true(grepl("girişimci ruhu bulunan çalışanlar olmalıdır", problem_metni))
})
# Q2 : Proje Amacı
[Entrepreneurial Competency in University Students](https://www.kaggle.com/datasets/namanmanchanda/entrepreneurial-competency-in-university-students) adlı girişimci üniversite öğrencilerine ilişkin Kaggle veri seti ile İkinci bir veri seti olarak şirketimin departman adlarını ve departmanlarının üniversitelerin hangi bölümlerinden çalışanlar aradıkları gibi değişkenler içeren basit bir (https://drive.google.com/file/d/11d_qbho-N2cZz1ORmWvCrIRo2aQVVvtn/view?usp=sharing) veri setini *girişimci olan adayları filtreleyerek* ve *girişimci olan adayları bölümlerine göre kümeleyerek* ardından *adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması sonucu adayların sıralanması* ve ikinci veri setinde **alım şartlarını sağlayan adayların belirlenmesi** yöntemlerini kullanarak problemi yok edeceğiz. Bu sayede de iş için uygun adayları belirlemeyi planlıyoruz.
amac_metni <- "[Entrepreneurial Competency in University Students](https://www.kaggle.com/datasets/namanmanchanda/entrepreneurial-competency-in-university-students) adlı girişimci üniversite öğrencilerine ilişkin Kaggle veri seti ile İkinci bir veri seti olarak şirketimin departman adlarını ve departmanlarının üniversitelerin hangi bölümlerinden çalışanlar aradıkları gibi değişkenler içeren basit bir (https://drive.google.com/file/d/11d_qbho-N2cZz1ORmWvCrIRo2aQVVvtn/view?usp=sharing) veri setini *girişimci olan adayları filtreleyerek* ve *girişimci olan adayları bölümlerine göre kümeleyerek* ardından *adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması sonucu adayların sıralanması* ve ikinci veri setinde **alım şartlarını sağlayan adayların belirlenmesi** yöntemlerini kullanarak problemi yok edeceğiz. Bu sayede de iş için uygun adayları belirlemeyi planlıyoruz."
print(amac_metni)
# Q3 : Veri seti keşifsel analizi
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(testthat)
test_that("Problem metni testi", {
# Metin içinde "Entrepreneurial Competency in University Students" kelimesi geçiyor mu?
expect_true(grepl("Entrepreneurial Competency in University Students", amac_metni))
# Metin içinde "Kaggle veri seti" kelimesi geçiyor mu?
expect_true(grepl("Kaggle veri seti", amac_metni))
# Metin içinde "girişimci olan adayları filtreleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları filtreleyerek", amac_metni))
# Metin içinde "girişimci olan adayları bölümlerine göre kümeleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları bölümlerine göre kümeleyerek", amac_metni))
# Metin içinde "adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması" ifadesi geçiyor mu?
expect_true(grepl("adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması", amac_metni))
# Metin içinde "iş için uygun adayları belirlemeyi planlıyoruz" ifadesi geçiyor mu?
expect_true(grepl("iş için uygun adayları belirlemeyi planlıyoruz", amac_metni))
# Metin içinde "ikinci veri setinde alım şartlarını sağlayan adayların belirlenmesi" ifadesi geçiyor mu?
expect_true(grepl("ikinci veri setinde alım şartlarını sağlayan adayların belirlenmesi", amac_metni))
})
library(testthat)
test_that("Problem metni testi", {
# Metin içinde "Entrepreneurial Competency in University Students" kelimesi geçiyor mu?
expect_true(grepl("Entrepreneurial Competency in University Students", amac_metni))
# Metin içinde "Kaggle veri seti" kelimesi geçiyor mu?
expect_true(grepl("Kaggle veri seti", amac_metni))
})
library(testthat)
test_that("Problem metni testi", {
# Metin içinde "Entrepreneurial Competency in University Students" kelimesi geçiyor mu?
expect_true(grepl("Entrepreneurial Competency in University Students", amac_metni))
# Metin içinde "Kaggle veri seti" kelimesi geçiyor mu?
expect_true(grepl("Kaggle veri seti", amac_metni))
# Metin içinde "girişimci olan adayları filtreleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları filtreleyerek", amac_metni))
# Metin içinde "girişimci olan adayları bölümlerine göre kümeleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları bölümlerine göre kümeleyerek", amac_metni))
})
library(testthat)
test_that("Problem metni testi", {
# Metin içinde "Entrepreneurial Competency in University Students" kelimesi geçiyor mu?
expect_true(grepl("Entrepreneurial Competency in University Students", amac_metni))
# Metin içinde "Kaggle veri seti" kelimesi geçiyor mu?
expect_true(grepl("Kaggle veri seti", amac_metni))
# Metin içinde "girişimci olan adayları filtreleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları filtreleyerek", amac_metni))
# Metin içinde "girişimci olan adayları bölümlerine göre kümeleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları bölümlerine göre kümeleyerek", amac_metni))
# Metin içinde "adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması" ifadesi geçiyor mu?
expect_true(grepl("adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması", amac_metni))
})
library(testthat)
test_that("Problem metni testi", {
# Metin içinde "Entrepreneurial Competency in University Students" kelimesi geçiyor mu?
expect_true(grepl("Entrepreneurial Competency in University Students", amac_metni))
# Metin içinde "Kaggle veri seti" kelimesi geçiyor mu?
expect_true(grepl("Kaggle veri seti", amac_metni))
# Metin içinde "girişimci olan adayları filtreleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları filtreleyerek", amac_metni))
# Metin içinde "girişimci olan adayları bölümlerine göre kümeleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları bölümlerine göre kümeleyerek", amac_metni))
# Metin içinde "adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması" ifadesi geçiyor mu?
expect_true(grepl("adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması", amac_metni))
# Metin içinde "iş için uygun adayları belirlemeyi planlıyoruz" ifadesi geçiyor mu?
expect_true(grepl("iş için uygun adayları belirlemeyi planlıyoruz", amac_metni))
})
library(testthat)
test_that("Problem metni testi", {
# Metin içinde "Entrepreneurial Competency in University Students" kelimesi geçiyor mu?
expect_true(grepl("Entrepreneurial Competency in University Students", amac_metni))
# Metin içinde "Kaggle veri seti" kelimesi geçiyor mu?
expect_true(grepl("Kaggle veri seti", amac_metni))
# Metin içinde "girişimci olan adayları filtreleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları filtreleyerek", amac_metni))
# Metin içinde "girişimci olan adayları bölümlerine göre kümeleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları bölümlerine göre kümeleyerek", amac_metni))
# Metin içinde "adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması" ifadesi geçiyor mu?
expect_true(grepl("adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması", amac_metni))
# Metin içinde "iş için uygun adayları belirlemeyi planlıyoruz" ifadesi geçiyor mu?
expect_true(grepl("iş için uygun adayları belirlemeyi planlıyoruz", amac_metni))
# Metin içinde "ikinci veri setinde alım şartlarını sağlayan adayların belirlenmesi" ifadesi geçiyor mu?
expect_true(grepl("ikinci veri setinde alım şartlarını sağlayan adayların belirlenmesi", amac_metni))
})
library(testthat)
test_that("Problem metni testi", {
# Metin içinde "Entrepreneurial Competency in University Students" kelimesi geçiyor mu?
expect_true(grepl("Entrepreneurial Competency in University Students", amac_metni))
# Metin içinde "Kaggle veri seti" kelimesi geçiyor mu?
expect_true(grepl("Kaggle veri seti", amac_metni))
# Metin içinde "girişimci olan adayları filtreleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları filtreleyerek", amac_metni))
# Metin içinde "girişimci olan adayları bölümlerine göre kümeleyerek" ifadesi geçiyor mu?
expect_true(grepl("girişimci olan adayları bölümlerine göre kümeleyerek", amac_metni))
# Metin içinde "adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması" ifadesi geçiyor mu?
expect_true(grepl("adayların pozitif özelliklerinin toplamından negatif özelliklerinin toplamı ile sentetik veri oluşturulması", amac_metni))
# Metin içinde "iş için uygun adayları belirlemeyi planlıyoruz" ifadesi geçiyor mu?
expect_true(grepl("iş için uygun adayları belirlemeyi planlıyoruz", amac_metni))
})
library(testthat)
test_that("Sonuç Değerlendirmesi ve Tavsiyeler Testi", {
# Metin içinde "girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir" ifadesi geçiyor mu?
expect_true(grepl("girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir", sonuc_degerlendirmesi))
# Metin içinde "girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır" ifadesi geçiyor mu?
expect_true(grepl("girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır", sonuc_degerlendirmesi))
# Metin içinde "iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar" ifadesi geçiyor mu?
expect_true(grepl("iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar", sonuc_degerlendirmesi))
# Metin içinde "Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır" ifadesi geçiyor mu?
expect_true(grepl("Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır", sonuc_degerlendirmesi))
# Metin içinde "zayıf yanları arasında ikinci veri setinin alım şartlarını sağlayan adayları belirleme konusunda detaylı bilgi içermemesi" ifadesi geçiyor mu?
expect_true(grepl("zayıf yanları arasında ikinci veri setinin alım şartlarını sağlayan adayları belirleme konusunda detaylı bilgi içermemesi", sonuc_degerlendirmesi))
# Metin içinde "ileriki çalışmalar için öneri olarak, ikinci veri setinin daha spesifik kriterler içermesi ve daha fazla özellik eklenmesiyle analizin daha kapsamlı hale getirilebileceği düşünülmektedir" ifadesi geçiyor mu?
expect_true(grepl("ileriki çalışmalar için öneri olarak, ikinci veri setinin daha spesifik kriterler içermesi ve daha fazla özellik eklenmesiyle analizin daha kapsamlı hale getirilebileceği düşünülmektedir", sonuc_degerlendirmesi))
})
# Q7 : Sonuç değerlendirme, tavsiyeler
**Aşağıda sunulmuştur:**
# Bu R CHUNK, test kodlarını içerir
testthat::test_file("Q1_tests_mert_yılmaz_200401098.R")
testthat::test_file("Q2_tests_mert_yılmaz_200401098.R")
testthat::test_file("Q3_tests_mert_yılmaz_200401098.R")
testthat::test_file("Q4_tests_mert_yılmaz_200401098.R")
testthat::test_file("Q5_tests_mert_yılmaz_200401098.R")
testthat::test_file("Q6_tests_mert_yılmaz_200401098.R")
testthat::test_file("Q7_tests_mert_yılmaz_200401098.R")
library(testthat)
test_that("Sonuç Değerlendirmesi ve Tavsiyeler Testi", {
# Metin içinde "girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir" ifadesi geçiyor mu?
expect_true(grepl("girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir", sonuc_degerlendirmesi))
# Metin içinde "girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır" ifadesi geçiyor mu?
expect_true(grepl("girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır", sonuc_degerlendirmesi))
# Metin içinde "iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar" ifadesi geçiyor mu?
expect_true(grepl("iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar", sonuc_degerlendirmesi))
# Metin içinde "Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır" ifadesi geçiyor mu?
expect_true(grepl("Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır", sonuc_degerlendirmesi))
# Metin içinde "zayıf yanları arasında ikinci veri setinin alım şartlarını sağlayan adayları belirleme konusunda detaylı bilgi içermemesi" ifadesi geçiyor mu?
expect_true(grepl("zayıf yanları arasında ikinci veri setinin alım şartlarını sağlayan adayları belirleme konusunda detaylı bilgi içermemesi", sonuc_degerlendirmesi))
# Metin içinde "ileriki çalışmalar için öneri olarak, ikinci veri setinin daha spesifik kriterler içermesi ve daha fazla özellik eklenmesiyle analizin daha kapsamlı hale getirilebileceği düşünülmektedir" ifadesi geçiyor mu?
expect_true(grepl("ileriki çalışmalar için öneri olarak, ikinci veri setinin daha spesifik kriterler içermesi ve daha fazla özellik eklenmesiyle analizin daha kapsamlı hale getirilebileceği düşünülmektedir", sonuc_degerlendirmesi))
})
library(testthat)
test_that("Sonuç Değerlendirmesi ve Tavsiyeler Testi", {
# Metin içinde "girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir" ifadesi geçiyor mu?
expect_true(grepl("girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir", sonuc_degerlendirmesi))
# Metin içinde "girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır" ifadesi geçiyor mu?
expect_true(grepl("girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır", sonuc_degerlendirmesi))
# Metin içinde "iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar" ifadesi geçiyor mu?
expect_true(grepl("iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar", sonuc_degerlendirmesi))
# Metin içinde "Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır" ifadesi geçiyor mu?
expect_true(grepl("Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır", sonuc_degerlendirmesi))
})
# Q7 : Sonuç değerlendirme, tavsiyeler
**Aşağıda sunulmuştur:**
sonuc_degerlendirmesi <-"Projenin sonuç değerlendirmesi, girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir.Veri setleri kullanılarak yapılan analizler sonucunda, girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır. Bu, iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar. Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır. Sonuçlar, proje hedefi olan iş için uygun adayları belirleme konusunda müşterilere değerli bir rehberlik sunabilir. Analizin güçlü yanı, girişimci özellikleriyle ilgili kapsamlı bir değerlendirme yapılması ve bu özelliklerin bölümlere göre gruplandırılmasıdır. Ancak, zayıf yanları arasında ikinci veri setinin alım şartlarını sağlayan adayları belirleme konusunda detaylı bilgi içermemesi yer alabilir. İleriki çalışmalar için öneri olarak, ikinci veri setinin daha spesifik kriterler içermesi ve daha fazla özellik eklenmesiyle analizin daha kapsamlı hale getirilebileceği düşünülmektedir."
# Bu R CHUNK, test kodlarını içerir
library(testthat)
test_that("Sonuç Değerlendirmesi ve Tavsiyeler Testi", {
# Metin içinde "girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir" ifadesi geçiyor mu?
expect_true(grepl("girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir", sonuc_degerlendirmesi))
# Metin içinde "girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır" ifadesi geçiyor mu?
expect_true(grepl("girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır", sonuc_degerlendirmesi))
# Metin içinde "iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar" ifadesi geçiyor mu?
expect_true(grepl("iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar", sonuc_degerlendirmesi))
# Metin içinde "Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır" ifadesi geçiyor mu?
expect_true(grepl("Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır", sonuc_degerlendirmesi))
# Metin içinde "zayıf yanları arasında ikinci veri setinin alım şartlarını sağlayan adayları belirleme konusunda detaylı bilgi içermemesi" ifadesi geçiyor mu?
expect_true(grepl("zayıf yanları arasında ikinci veri setinin alım şartlarını sağlayan adayları belirleme konusunda detaylı bilgi içermemesi", sonuc_degerlendirmesi))
# Metin içinde "ileriki çalışmalar için öneri olarak, ikinci veri setinin daha spesifik kriterler içermesi ve daha fazla özellik eklenmesiyle analizin daha kapsamlı hale getirilebileceği düşünülmektedir" ifadesi geçiyor mu?
expect_true(grepl("ileriki çalışmalar için öneri olarak, ikinci veri setinin daha spesifik kriterler içermesi ve daha fazla özellik eklenmesiyle analizin daha kapsamlı hale getirilebileceği düşünülmektedir", sonuc_degerlendirmesi))
})
library(testthat)
test_that("Sonuç Değerlendirmesi ve Tavsiyeler Testi", {
# Metin içinde "girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir" ifadesi geçiyor mu?
expect_true(grepl("girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir", sonuc_degerlendirmesi))
# Metin içinde "girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır" ifadesi geçiyor mu?
expect_true(grepl("girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır", sonuc_degerlendirmesi))
# Metin içinde "iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar" ifadesi geçiyor mu?
expect_true(grepl("iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar", sonuc_degerlendirmesi))
})
test_that("Sonuç Değerlendirmesi ve Tavsiyeler Testi", {
# Metin içinde "girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir" ifadesi geçiyor mu?
expect_true(grepl("girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir", sonuc_degerlendirmesi))
# Metin içinde "girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır" ifadesi geçiyor mu?
expect_true(grepl("girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır", sonuc_degerlendirmesi))
# Metin içinde "iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar" ifadesi geçiyor mu?
expect_true(grepl("iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar", sonuc_degerlendirmesi))
# Metin içinde "Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır" ifadesi geçiyor mu?
expect_true(grepl("Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır", sonuc_degerlendirmesi))
# Metin içinde "zayıf yanları arasında ikinci veri setinin alım şartlarını sağlayan adayları belirleme konusunda detaylı bilgi içermemesi" ifadesi geçiyor mu?
expect_true(grepl("zayıf yanları arasında ikinci veri setinin alım şartlarını sağlayan adayları belirleme konusunda detaylı bilgi içermemesi", sonuc_degerlendirmesi))
})
library(testthat)
test_that("Sonuç Değerlendirmesi ve Tavsiyeler Testi", {
# Metin içinde "girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir" ifadesi geçiyor mu?
expect_true(grepl("girişimci adayları belirleme amacına başarılı bir şekilde ulaşıldığını göstermektedir", sonuc_degerlendirmesi))
# Metin içinde "girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır" ifadesi geçiyor mu?
expect_true(grepl("girişimci özelliklere sahip adaylar bölümlerine göre başarılı bir şekilde eşleştirilmiş, kümelendirilmiş ve sıralanmıştır", sonuc_degerlendirmesi))
# Metin içinde "iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar" ifadesi geçiyor mu?
expect_true(grepl("iş için uygun adayları belirleme sürecinde etkili bir rehberlik sağlar", sonuc_degerlendirmesi))
# Metin içinde "Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır" ifadesi geçiyor mu?
expect_true(grepl("Elde edilen sonuçların mantıklı olması, pozitif ve negatif özelliklerin dengeli bir şekilde değerlendirilmesiyle sağlanmıştır", sonuc_degerlendirmesi))
# Metin içinde "zayıf yanları arasında ikinci veri setinin alım şartlarını sağlayan adayları belirleme konusunda detaylı bilgi içermemesi" ifadesi geçiyor mu?
expect_true(grepl("zayıf yanları arasında ikinci veri setinin alım şartlarını sağlayan adayları belirleme konusunda detaylı bilgi içermemesi", sonuc_degerlendirmesi))
})
library(testthat)
testthat::test_that("EducationSector sütunu factor türüne dönüştürülmüş mü?", {
expect_true(is.factor(myDF_1$EducationSector))
})
testthat::test_that("IndividualProject sütunu factor türüne dönüştürülmüş mü?", {
expect_true(is.factor(myDF_1$IndividualProject))
})
testthat::test_that("MentalDisorder sütunu factor türüne dönüştürülmüş mü?", {
expect_true(is.factor(myDF_1$MentalDisorder))
})
testthat::test_that("RequireEducationSector sütunu factor türüne dönüştürülmüş mü?", {
expect_true(is.factor(myDF_2$RequireEducationSector))
})
library(testthat)
testthat::test_that("GSkor sütunu oluşturuldu mu?", {
expect_true("GSkor" %in% names(filtered_data))
})
testthat::test_that("GSkor sütunu numeric türüne dönüştürüldü mü?", {
expect_true(is.numeric(filtered_data$GSkor))
})
testthat::test_that("Adaylar GSkor'a göre büyükten küçüğe sıralandı mı?", {
expect_true(all(diff(filtered_data$GSkor) <= 0))
})
library(testthat)
testthat::test_that("UygunAdaylar sütunu oluşturuldu mu?", {
expect_true("UygunAdaylar" %in% names(myDF_2))
})
testthat::test_that("UygunAdaylar sütunu içinde doğru numaralar var mı?", {
# Eğer UygunAdaylar sütunu boş değilse, her bir numara arasında virgül olduğunu kontrol et.
if (!all(is.na(myDF_2$UygunAdaylar))) {
expect_true(all(sapply(strsplit(as.character(myDF_2$UygunAdaylar[!is.na(myDF_2$UygunAdaylar)]), ","), function(x) all(as.numeric(x) %in% 1:nrow(sorted_data)))))
}
})
testthat::test_that("Girişimcilik skorları doğru aralıkta mı?", {
expect_true(all(sorted_data$GSkor > 20))
})
